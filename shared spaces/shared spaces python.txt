from vpython import *
import pyttsx3
import tkinter as tk
from tkinter import PhotoImage
from tkinter import font
import pygame
from tkinter import simpledialog


def start_button_clicked():
    print("Start button clicked!")
    pygame.mixer.music.load("rclick-13693.mp3")  
    pygame.mixer.music.play()

# Initialize pygame
pygame.mixer.init()

# Create the main window
root = tk.Tk()
root.title("Start Button Example")

# Load the background image
background_image = PhotoImage(file="imagesss_44.png")  

# Create a label to display the background image
background_label = tk.Label(root, image=background_image)
background_label.place(relwidth=1, relheight=1)  # Make the label cover the entire window

# Create a font with a larger size
large_font = font.Font(size=1)

# Create a label with the larger font
label = tk.Label(root, text="  SHARED SPACES  ", font=large_font, bg="white")
label.pack(pady=1)

# Create a Start button
start_button = tk.Button(root, text="Start", command=start_button_clicked)
start_button.pack()

# Create a Canvas widget to embed vpython graphics
canvas = tk.Canvas(root, width=1, height=1)
canvas.pack()


def display_thank_you_page():
    thank_you_window = tk.Toplevel(root)
    thank_you_window.title("Thank You")
    
    label = tk.Label(thank_you_window, text="Thank you for using our application!")
    label.pack(padx=20, pady=20)
    
    close_button = tk.Button(thank_you_window, text="Close", command=thank_you_window.destroy)
    close_button.pack()





def speak_text(text):
        engine = pyttsx3.init()
    
        # Convert text to speech and read it aloud
        engine.setProperty("rate",150)
        engine.say(text)
    
        engine.runAndWait()



def create_shape(shape_type, x, y, z):
    if shape_type == "Cube":
        return box(pos=vector(x, y, z), size=vector(4, 4, 4), color=color.blue)
    elif shape_type == "Sphere":
        return sphere(pos=vector(x, y, z), radius=2, color=color.yellow)
    elif shape_type == "Pyramid":
        return pyramid(pos=vector(x, y, z), size=vector(4, 4, 4), color=color.red)
    

# Start the tkinter main loop
root.mainloop()

# Create a Tkinter root window to display the input dialogs
root = tk.Tk()
root.withdraw()  # Hide the main root window

# Prompt the user to enter the number of shapes
text_to_read1="enter the number of shapes you want to create"
speak_text(text_to_read1)
num_shapes = simpledialog.askinteger("Number of Shapes", "Enter the number of shapes you want to create:")
text_to_read2="enter the shape type"
speak_text(text_to_read2)
shapes = []
for _ in range(num_shapes):
    # Prompt the user to enter the shape type
    text_to_read3="enter the shape type"
    speak_text(text_to_read3)
    shape_type = simpledialog.askstring("Shape Type", "Enter the shape type (Cube, Sphere, or Pyramid): ")
    if shape_type is None:  # Handle the case where the user closes the dialog without entering anything
        continue

    # Prompt the user to enter the position coordinates
    text_to_read4="enter the position vector of the shape"
    speak_text(text_to_read4)
    x = simpledialog.askfloat("Position", "Enter x coordinate for the shape:")
    y = simpledialog.askfloat("Position", "Enter y coordinate for the shape:")
    z = simpledialog.askfloat("Position", "Enter z coordinate for the shape:")
    if any(param is None for param in [x, y, z]):  # Handle the case where the user closes the dialog without entering anything
        continue

    # Create the shape based on user input and store it in the shapes list
    shape = create_shape(shape_type, x, y, z)
    shapes.append((shape, shape_type))  # Store the shape and its type in a tuple



# Display the Thank You page
display_thank_you_page()

root.mainloop()
